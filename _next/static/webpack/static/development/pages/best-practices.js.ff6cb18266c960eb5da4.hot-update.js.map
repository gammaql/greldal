{"version":3,"file":"static/webpack/static\\development\\pages\\best-practices.js.ff6cb18266c960eb5da4.hot-update.js","sources":["webpack:///./pages/best-practices.md"],"sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"best-practices\"}}><MDXTag name=\"a\" components={components} parentName=\"h1\" props={{\"href\":\"#best-practices\",\"aria-hidden\":\"true\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon icon-link\"}}></MDXTag></MDXTag>{`Best Practices`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Following best practices are strongly recommended by the developers of GRelDAL based on their experience of working with ambitious data driven applications.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"ensure-that-database-schema-is-in-source-control\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"href\":\"#ensure-that-database-schema-is-in-source-control\",\"aria-hidden\":\"true\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon icon-link\"}}></MDXTag></MDXTag>{`Ensure that database schema is in Source Control`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`GRelDAL currently doesn't do anything to ensure that the fields defined in data store are in sync with the database schema and you are responsible for ensuring that they don't go out of sync.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`One of the most practical ways to ensure this is to use `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://knexjs.org/#Migrations\"}}>{`migrations`}</MDXTag>{` and ensure that any schema changes are tracked in version control.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For the same reason we also insist on having integration tests which test against an actual database on which the migrations have been run before each deployment.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Because our underlying data access layer Knex already has good migration support and `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://knexjs.org/#Migrations-CLI\"}}>{`CLI`}</MDXTag>{`, GRelDAL doesn't provide any additional utilities for database schema management.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"ensure-backward-compatibility-of-apis\"}}><MDXTag name=\"a\" components={components} parentName=\"h2\" props={{\"href\":\"#ensure-backward-compatibility-of-apis\",\"aria-hidden\":\"true\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon icon-link\"}}></MDXTag></MDXTag>{`Ensure backward compatibility of APIs`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It is also recommended to have a `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://jestjs.io/docs/en/snapshot-testing\"}}>{`snapshot test`}</MDXTag>{` of the output of `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`printSchema(generatedSchema)`}</MDXTag>{`, where `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://graphql.org/graphql-js/utilities/#printschema\"}}>{`printSchema`}</MDXTag>{` is a function exposed from `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`graphql-js`}</MDXTag>{` which prints out a human readable description of the schema and types involved in `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://alligator.io/graphql/graphql-sdl/\"}}>{`GraphQL SDL`}</MDXTag>{` format.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`It is useful for auditing changes in the exposed API as the application involves. GraphQL APIs are generally expected to be forever backward compatible and auditing of the schema is a practical way of ensuring that.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The schema snapshot also serves as contract document that describes your API in an industry standard format.`}</MDXTag></MDXTag>\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;AACA;AACA;AAGA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAVA;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}