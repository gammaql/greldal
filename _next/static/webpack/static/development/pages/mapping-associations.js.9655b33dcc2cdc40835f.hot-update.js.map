{"version":3,"file":"static/webpack/static\\development\\pages\\mapping-associations.js.9655b33dcc2cdc40835f.hot-update.js","sources":["webpack:///./pages/mapping-associations.md"],"sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import {NextPageLink} from \"../components/Link\";\nimport Link from \"next/link\";\nimport {CodeSnippet} from \"../components/CodeSnippet\";\n\nexport default ({components, ...props}) => <MDXTag name=\"wrapper\"  components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"mapping-queries-over-associations\"}}><MDXTag name=\"a\" components={components} parentName=\"h1\" props={{\"href\":\"#mapping-queries-over-associations\",\"aria-hidden\":\"true\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon icon-link\"}}></MDXTag></MDXTag>{`Mapping Queries over Associations`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`While data sources derived from a single tables are useful in themselves, in larger applications, you'd likely have data stored across multiple tables. After all, the ability to join tables and enforce constraints on connected tables is what makes relational databases so powerful.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`GRelDAL makes it easy for you to take advantage of advanced features of relational databases, by providing APIs to link data sources through different loading strategies.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"associations-fetched-through-join-queries\"}}><MDXTag name=\"a\" components={components} parentName=\"h3\" props={{\"href\":\"#associations-fetched-through-join-queries\",\"aria-hidden\":\"true\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon icon-link\"}}></MDXTag></MDXTag>{`Associations fetched through join queries`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`We can configure an association between multiple data sources to use a join.`}</MDXTag>\n<CodeSnippet name=\"mapAssociation_leftOuterJoin_default\" />\n<MDXTag name=\"p\" components={components}>{`So now, for a query like the following:`}</MDXTag>\n<CodeSnippet name=\"mapAssociation_leftOuterJoin_default_query\" transform={(content) => content.trim().split('\\n').slice(1, -1).join('\\n') }/>\n<MDXTag name=\"p\" components={components}>{`GRelDAL will join the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`products`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`departments`}</MDXTag>{` table on the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`department_id`}</MDXTag>{` and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`id`}</MDXTag>{` columns.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`You are not limited in how many tables you can join and how the joins should be performed. Even in case of multiple joins or recursive joins, GRelDAL can take care of reverse mapping the fetched data sets into the hierarchical format your client expects.`}</MDXTag>\n<CodeSnippet name=\"mapAssociation_multiJoin_custom\" />\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"associations-fetched-through-batch-queries\"}}><MDXTag name=\"a\" components={components} parentName=\"h3\" props={{\"href\":\"#associations-fetched-through-batch-queries\",\"aria-hidden\":\"true\"}}><MDXTag name=\"span\" components={components} parentName=\"a\" props={{\"className\":\"icon icon-link\"}}></MDXTag></MDXTag>{`Associations fetched through batch queries:`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`An alternative to joins is to side-load the operations on related data sources.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Note that in the below scenario, when we are fetching a department and related products, we are always making only two queries - irrespective of the number of departments or the number of products we have or how many of them end up in our result set. Both of these queries are batched, and once again we can fall back on GRelDAL do our reverse mapping for us.`}</MDXTag>\n<CodeSnippet name=\"mapAssociation_sideLoading\" />\n<NextPageLink>Best Practices</NextPageLink></MDXTag>\n  "],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAhBA;;;;A","sourceRoot":""}