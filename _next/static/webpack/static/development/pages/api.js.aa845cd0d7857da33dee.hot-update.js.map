{"version":3,"file":"static/webpack/static\\development\\pages\\api.js.aa845cd0d7857da33dee.hot-update.js","sources":["webpack:///./components/TypePresenter.js"],"sourcesContent":["import React from \"react\";\r\nimport qs from \"qs\";\r\nimport JSONTree from \"react-json-tree\";\r\nimport { findAnywhereInHierarchy } from \"../utils/api\";\r\nimport { HierarchyContext } from \"./HierarchyContext\";\r\nimport { Link } from \"./Link\";\r\n\r\n// https://github.com/reduxjs/redux-devtools/blob/75322b15ee7ba03fddf10ac3399881e302848874/src/react/themes/default.js\r\nconst theme = {\r\n    scheme: \"default\",\r\n    author: \"chris kempson (http://chriskempson.com)\",\r\n    base00: \"#181818\",\r\n    base01: \"#282828\",\r\n    base02: \"#383838\",\r\n    base03: \"#585858\",\r\n    base04: \"#b8b8b8\",\r\n    base05: \"#d8d8d8\",\r\n    base06: \"#e8e8e8\",\r\n    base07: \"#f8f8f8\",\r\n    base08: \"#ab4642\",\r\n    base09: \"#dc9656\",\r\n    base0A: \"#f7ca88\",\r\n    base0B: \"#a1b56c\",\r\n    base0C: \"#86c1b9\",\r\n    base0D: \"#7cafc2\",\r\n    base0E: \"#ba8baf\",\r\n    base0F: \"#a16946\",\r\n};\r\n\r\nexport const TypePresenter = ({ type }) => (\r\n    <HierarchyContext.Consumer>\r\n        {hierarchy => {\r\n            let primary;\r\n            if (type.type === \"reference\") {\r\n                primary = type.name;\r\n                if (primary) {\r\n                    const primaryEntity = findAnywhereInHierarchy(hierarchy, primary);\r\n                    if (primaryEntity) {\r\n                        primary = (\r\n                            <a\r\n                                href={\r\n                                    `${ROOT_PATH}/api?` +\r\n                                    qs.stringify({\r\n                                        apiCategory: \"ConfigType\",\r\n                                        rootEntityName: primary,\r\n                                        entityName: primary,\r\n                                    })\r\n                                }\r\n                            >\r\n                                {primary}\r\n                            </a>\r\n                        );\r\n                    } else {\r\n                        primary = <a href={`https://github.com/gql-dal/greldal/search?q=${primary}`}>{primary}</a>;\r\n                    }\r\n                }\r\n            }\r\n            const tree = <JSONTree data={type} theme={theme} />;\r\n            return (\r\n                <>\r\n                    {primary}\r\n                    {primary && (\r\n                        <div\r\n                            css={`\r\n                                color: #ddd;\r\n                            `}\r\n                        >\r\n                            ---\r\n                        </div>\r\n                    )}\r\n                    <a title=\"The parsed representation of type. This structure can provide more information about type parameters\">\r\n                        Details\r\n                    </a>\r\n                    {tree}\r\n                </>\r\n            );\r\n        }}\r\n    </HierarchyContext.Consumer>\r\n);\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAqBA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AAGA;AACA;AACA;AAHA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AA/CA;AACA;;;;;A","sourceRoot":""}